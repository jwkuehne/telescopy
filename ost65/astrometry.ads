with Ada.Environment_Variables; use Ada.Environment_Variables; -- Command line stored in QUERY_STRING for easy web access.
with Interfaces.Fortran; use Interfaces.Fortran;               -- Using Starlink SLALIB positional astronomy by P.T. Wallace.
with Ada.Numerics.Generic_Elementary_Functions;                -- Need math for Long_Float.
with Ada.Calendar; use Ada.Calendar;                           -- For acquiring UTC and local time/date.
with Ada.Strings.Fixed; use Ada.Strings.Fixed;                 -- For things like 10 * " ";

with ancillary; use ancillary;                                 -- SLALIB routines and general support.

-- Catalogs are from various reliable sources, and are processed by perl into Ada Specification Files.
with FK5; use FK5;                                             -- Fifth Fundamental Catalog, Vizier . Generated by FK5toads.pl.
with BSC; use BSC;                                             -- Yale Bright Star Catalog, Vizier. Generated by BSCtoads.pl.
with MESSIER; use MESSIER;                                     -- Messier catalog from KPNO. Generated by MESSIERtoads.pl.
with NGC; use NGC;                                             -- NGC processed from Steinicke's opus. Generated by NGCtoads.pl.
with IC; use IC;                                               -- IC processed from Steinicke's opus. Generated by ICtoads.pl.

with Ada.Text_IO; use Ada.Text_IO;
with Ada.Integer_Text_IO; use Ada.Integer_Text_IO;
with Ada.Strings.Equal_Case_Insensitive;                       -- Only used in ZR case to check ZEROS_SET.
with GNAT.Sockets;  use GNAT.Sockets;

package ASTROMETRY is

-- Astrometry commands.
type A_DISPATCH      is (BS, CI, CM, FK, GO, HL, ID, LB, LF, LS, MS, NG, PA, PT, SL, TR, VD, ZA, ZD, ZP, ZR);

-- After processing the A_DISPATCH, decide if a position is required (i.e. not VOID) on what type of object.
type ASTRONOMICAL  is (STAR, SOLARSYSTEM, VOID); -- STAR is anything with a fairly fixed RA and DEC. You can't point to the VOID.
type RD_NAME       is (MERCURY, VENUS, MOON, MARS, JUPITER, SATURN, URANUS, NEPTUNE, PLUTO, SUN); -- SOLARSYSTEM names in RDPLAN.
type EPOCH_EQUINOX is (J2000, B1950); -- J2000 is Julian EPOCH=EQUINOX=2000.0, B1950 is Besselian EPOCH=EQUINOX=1950.0.

DEFAULT_HA_ZERO   : Long_Float := 152.0; -- Arcseconds.
DEFAULT_DEC_ZERO  : Long_FLoat := 72.0;  -- Arcseconds.

type ASTROMETRIC is record -- not variant on the OBJECT: RM, DM and OBJECT_EPOCH are for STAR only, DIAM for SOLARSYSTEM.
   OBJECT         : ASTRONOMICAL := VOID; -- VOID, STAR, or SOLARSYTEM.
   -- Next 9 present for all OBJECTs.
   ZEROS_ERROR    : Boolean;              -- True if zeros can't be read.
   MOUNT_ON       : MOUNT;                -- The MOUNT model selected by chars 1..5  of the string MOUNTINST.
   INST_ON        : INST;                 -- The INST selected by chars 6..9 of the string MOUNTINST;
   HA_OFFSET      : Long_Float;           -- The HA_OFFSET in arcseconds per year multiplied by cos(DEC).
   DEC_OFFSET     : Long_Float;           -- The DEC_OFFSET in arcseconds per year.
   WEATHER_ERROR  : Boolean;              -- True if unable to get P,T,RH
   PMB            : Long_Float;           -- Pressure in millibars.
   TDK            : Long_Float;           -- Temperature in degrees Kelvin.
   RH             : Long_Float;           -- Relative Humidity percent.
   --
   YEAR           : Year_Number;          -- Year.
   MONTH          : Month_Number;         -- Month.
   DAY            : Day_Number;           -- Day.
   SEC            : Day_Duration;         -- Second.
   LST            : Double_Precision;     -- Local Sideral Time radians.
   NAME           : String(1 .. 10);      -- Identifier: a catalog name and number, SOLARSYSTEM object, EPHEMERIS, or POSITION.
   RM             : Double_Precision;     -- Mean RA radians.  Not set for SOLARSYSTEM.
   DM             : Double_Precision;     -- Mean DEC radians. Not set for SOLARSYSTEM.
   OBJECT_EPOCH   : EPOCH_EQUINOX;        -- J2000 or B1950.   Not set for SOLARSYSTEM.
   PR_OUT         : Long_Float;           -- RA proper motion milliarcseconds*cos(DEC) per year. Not set for SOLARSYSTEM.
   PD_OUT         : Long_Float;           -- DEC proper motion milliarcseconds per year. Not set for SOLARSYSTEM.
   RA             : Double_Precision;     -- RA Apparent.
   DA             : Double_Precision;     -- DEC Apparent.
   MJD_UTC        : Double_Precision;     -- MJD UTC.
   DIAM           : Double_Precision;     -- Set only for SOLARSYSTEM.
   VISIBLE        : Boolean;              -- Object is above horizon.
   ROB            : Double_Precision;     -- RA Observed.
   DOB            : Double_Precision;     -- DEC Observed.
   HOB            : Double_Precision;     -- HA Observed.
   ZOB            : Double_Precision;     -- Zenith Distance Observed.
   AOB            : Double_Precision;     -- Azimuth Observed.
   THOB           : Long_Float;           -- Derived Track HA Observed.
   TDOB           : Long_Float;           -- Derived Track DEC Observed.
   FLEX           : Boolean;              -- Flexure calculation completed, boolean.
   FLEX_RA        : RADIAN;               -- RA Observed and flexed.
   FLEX_DEC       : RADIAN;               -- DEC Observed and flexed.
   TFLEX_HA       : Long_Float;           -- Derived Track HA Observed and flexed.
   TFLEX_DEC      : Long_Float;           -- Derived Track DEC Observed and flexed.
   FLEX_HA        : RADIAN;               -- HA Observed and flexed.
   DOME           : DEGREE;               -- Dome azimuth in degrees required for this object.
   AIRMASS        : Double_Precision;     -- Airmass.
end record;

protected POINT is
   procedure GRIND (QUERY : in string;
                    SONA  : out ASTROMETRIC;
                    TUBE  : in CARDINAL := EAST;
                    LOG   : in Boolean  := TRUE;
                    CHAN  : in GNAT.Sockets.Stream_Access := null)
                    with Pre => QUERY'Length <= STORE;

private
   LAST_COMMAND  : string(1 .. STORE); -- Commands that save the last command to this string can be repeated.
   TRACK_COMMAND : string(1 .. STORE); -- The GO command saves the last command to this track command for repetition.
end POINT;

end ASTROMETRY;
